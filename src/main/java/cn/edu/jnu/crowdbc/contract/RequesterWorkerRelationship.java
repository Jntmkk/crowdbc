package cn.edu.jnu.crowdbc.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.5.11.
 */
@SuppressWarnings("rawtypes")
public class RequesterWorkerRelationship extends Contract {
    public static final String BINARY = "";

    public static final String FUNC_GETSOLUTIONLENGTH = "getSolutionLength";

    public static final String FUNC_CHECKWORKER = "checkWorker";

    public static final String FUNC_ISRECEIVE = "isReceive";

    public static final String FUNC_KILL = "kill";

    public static final String FUNC_EVALUATESOLUTION = "evaluateSolution";

    public static final String FUNC_GETSOLUTION = "getSolution";

    public static final String FUNC_SUBMITSOLUTION = "submitSolution";

    public static final String FUNC_RECEIVETASK = "receiveTask";

    public static final String FUNC_GETTASKINFO = "getTaskInfo";

    @Deprecated
    protected RequesterWorkerRelationship(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected RequesterWorkerRelationship(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected RequesterWorkerRelationship(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected RequesterWorkerRelationship(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> getSolutionLength() {
        final Function function = new Function(
                FUNC_GETSOLUTIONLENGTH, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> checkWorker(String workerName) {
        final Function function = new Function(
                FUNC_CHECKWORKER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(workerName)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> isReceive(String workerName) {
        final Function function = new Function(
                FUNC_ISRECEIVE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(workerName)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> kill() {
        final Function function = new Function(
                FUNC_KILL, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> evaluateSolution(BigInteger id, BigInteger level) {
        final Function function = new Function(
                FUNC_EVALUATESOLUTION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(id), 
                new org.web3j.abi.datatypes.generated.Uint256(level)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> getSolution(BigInteger i) {
        final Function function = new Function(
                FUNC_GETSOLUTION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(i)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> submitSolution(String workerName, String solution, String pointer) {
        final Function function = new Function(
                FUNC_SUBMITSOLUTION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(workerName), 
                new org.web3j.abi.datatypes.Utf8String(solution), 
                new org.web3j.abi.datatypes.Utf8String(pointer)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> receiveTask(String workerName, BigInteger weiValue) {
        final Function function = new Function(
                FUNC_RECEIVETASK, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(workerName)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<TransactionReceipt> getTaskInfo() {
        final Function function = new Function(
                FUNC_GETTASKINFO, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static RequesterWorkerRelationship load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new RequesterWorkerRelationship(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static RequesterWorkerRelationship load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new RequesterWorkerRelationship(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static RequesterWorkerRelationship load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new RequesterWorkerRelationship(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static RequesterWorkerRelationship load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new RequesterWorkerRelationship(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<RequesterWorkerRelationship> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, BigInteger initialWeiValue, String regAddr, String _gmAddr, String _ownerName, String desc, BigInteger deposit, BigInteger deadline, BigInteger maxNum, BigInteger minReputation, BigInteger ttype, String pointer) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, regAddr), 
                new org.web3j.abi.datatypes.Address(160, _gmAddr), 
                new org.web3j.abi.datatypes.Utf8String(_ownerName), 
                new org.web3j.abi.datatypes.Utf8String(desc), 
                new org.web3j.abi.datatypes.generated.Uint256(deposit), 
                new org.web3j.abi.datatypes.generated.Uint256(deadline), 
                new org.web3j.abi.datatypes.generated.Uint256(maxNum), 
                new org.web3j.abi.datatypes.generated.Uint256(minReputation), 
                new org.web3j.abi.datatypes.generated.Uint256(ttype), 
                new org.web3j.abi.datatypes.Utf8String(pointer)));
        return deployRemoteCall(RequesterWorkerRelationship.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor, initialWeiValue);
    }

    public static RemoteCall<RequesterWorkerRelationship> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, BigInteger initialWeiValue, String regAddr, String _gmAddr, String _ownerName, String desc, BigInteger deposit, BigInteger deadline, BigInteger maxNum, BigInteger minReputation, BigInteger ttype, String pointer) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, regAddr), 
                new org.web3j.abi.datatypes.Address(160, _gmAddr), 
                new org.web3j.abi.datatypes.Utf8String(_ownerName), 
                new org.web3j.abi.datatypes.Utf8String(desc), 
                new org.web3j.abi.datatypes.generated.Uint256(deposit), 
                new org.web3j.abi.datatypes.generated.Uint256(deadline), 
                new org.web3j.abi.datatypes.generated.Uint256(maxNum), 
                new org.web3j.abi.datatypes.generated.Uint256(minReputation), 
                new org.web3j.abi.datatypes.generated.Uint256(ttype), 
                new org.web3j.abi.datatypes.Utf8String(pointer)));
        return deployRemoteCall(RequesterWorkerRelationship.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor, initialWeiValue);
    }

    @Deprecated
    public static RemoteCall<RequesterWorkerRelationship> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue, String regAddr, String _gmAddr, String _ownerName, String desc, BigInteger deposit, BigInteger deadline, BigInteger maxNum, BigInteger minReputation, BigInteger ttype, String pointer) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, regAddr), 
                new org.web3j.abi.datatypes.Address(160, _gmAddr), 
                new org.web3j.abi.datatypes.Utf8String(_ownerName), 
                new org.web3j.abi.datatypes.Utf8String(desc), 
                new org.web3j.abi.datatypes.generated.Uint256(deposit), 
                new org.web3j.abi.datatypes.generated.Uint256(deadline), 
                new org.web3j.abi.datatypes.generated.Uint256(maxNum), 
                new org.web3j.abi.datatypes.generated.Uint256(minReputation), 
                new org.web3j.abi.datatypes.generated.Uint256(ttype), 
                new org.web3j.abi.datatypes.Utf8String(pointer)));
        return deployRemoteCall(RequesterWorkerRelationship.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor, initialWeiValue);
    }

    @Deprecated
    public static RemoteCall<RequesterWorkerRelationship> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue, String regAddr, String _gmAddr, String _ownerName, String desc, BigInteger deposit, BigInteger deadline, BigInteger maxNum, BigInteger minReputation, BigInteger ttype, String pointer) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, regAddr), 
                new org.web3j.abi.datatypes.Address(160, _gmAddr), 
                new org.web3j.abi.datatypes.Utf8String(_ownerName), 
                new org.web3j.abi.datatypes.Utf8String(desc), 
                new org.web3j.abi.datatypes.generated.Uint256(deposit), 
                new org.web3j.abi.datatypes.generated.Uint256(deadline), 
                new org.web3j.abi.datatypes.generated.Uint256(maxNum), 
                new org.web3j.abi.datatypes.generated.Uint256(minReputation), 
                new org.web3j.abi.datatypes.generated.Uint256(ttype), 
                new org.web3j.abi.datatypes.Utf8String(pointer)));
        return deployRemoteCall(RequesterWorkerRelationship.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor, initialWeiValue);
    }
}
